import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Link from 'next/link'
import { IntegrationWallets } from '../components/Wallet/IntegratedWallets'
import MessageBox from '../components/MessgeBox/MessageBox'
import { useContextAPI } from '../lib/contextapi'
import { useWeb3React } from '@web3-react/core'
import { useState } from 'react'
import { createCollection } from '../lib/createSchema'
import { insertDataMember } from '../lib/polybasesdk'
import { coffeeContractAddress, coffeeContractjson } from '../smartContractData/coffeeContract'
import { ethers } from 'ethers'

export default function Home() {
  const {message , setMessage, members, setMembers} = useContextAPI()
  const {account , active , library} = useWeb3React()

  const [pageName, setpageName] = useState('')

  const [isLoading, setIsLoading] = useState(false)


  const registerPage = async () => {

    if(!pageName){
      setMessage({message: "invalid page name" , isMessage: true, color: "danger"})
      return
    }
    try {
      setIsLoading(true)
      const signer = library?.getSigner(account)
      const coffeeCon = new ethers.Contract(coffeeContractAddress, coffeeContractjson.abi, signer);

      const pageid = await coffeeCon.pageid()
      const pageidstring = pageid.toString()
      // const tx = await coffeeCon.RegisterPage(pageName)
      // await tx.wait()
      const {message, status} = await insertDataMember(pageName, account, "0.001" , members, setMembers)
      if(status){
        setMessage({message: message, isMessage: true, color: "success"})
        setIsLoading(false)
      }else {
        setMessage({message: message, isMessage: true, color: "danger"})
        setIsLoading(false)

      }

    } catch (error) {
      console.log(error);
      setMessage({message: error.reason || error.message, isMessage: true, color: "danger"})
      setIsLoading(false)

    }
  }

  return (
    <div>
      <Head>
        <title>Buymeacoffee</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {message?.isMessage &&
       <div className="container-fluid" style={{ position: 'fixed', top: '50px', right: '20px', zIndex: '111111', width: "300px" }}>
         <MessageBox message={message} setMessage={setMessage} value={0}/>
       </div>
      }


      <div className="container text-center ">
        <div className="row">
          <div className="col-12 mt-5">
          <h1>Buy me a coffee</h1> 
          </div>


          <div className="col-12 my-5">
            <div className="row justify-content-center">
              <div className="col-lg-8 p-2 bg-light rounded-pill">
                <div className="input-group">
                  <div className="input-group-prepend border-none">
                    <span className="input-group-text bg-light  fs-4" style={{border: "0px solid black"}}>buymeacoffee.com/</span>
                  </div>
                  <input type="text" value={pageName} onChange={(e) => setpageName(e.target.value)} className="form-control fs-4 bg-light p-0 m-0" style={{border: "0px solid black"}} aria-label="Amount (to the nearest dollar)" />
                  <div className="input-group-append">

                  {active ?
                    <button className="btn btn-warning m-1 px-4 rounded-pill fs-5" disabled={isLoading} onClick={registerPage}>{isLoading?"Processing.." : "Get it"}</button> :
                    <IntegrationWallets btnName="Get it" />
                    }
                  </div>
                </div>

              </div>
            </div>
          </div>

          {/* <div className="col-lg-12 p-5 py-3 bg-light memember rounded text-start">
              <Link href={`#`} >
                  <div className=' '>
                  <h2>farooq &rarr;</h2>
                  <p>Total Contributors: 23123</p>
                  <p>0x213.3123 </p>
                  </div>
                </Link>
              </div> */}


          <div className="col-12 my-5">
            <button className="btn btn-primary m-1 px-4 rounded-pill fs-5">All members</button> 
          </div>

          <div className="row text-start justify-content-center p-0 m-0">
              {members?.map(item => {
                return (
                  <Link key={item.pagename} href={`/${item.pagename}`} className="col-md-3 p-4 members">
                  <div className=' '>
                  <h2>{item.pagename} &rarr;</h2>
                  <p>Total Contributors: {item.contributers.length}</p>
                  <p>{item.memberaddress.slice(0,4)}...{item.memberaddress.slice(-4)} </p>
                  </div>
                </Link>
                )
              })}
          </div>
        </div>
      </div>

      {/* <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer> */}
    </div>
  )
}
